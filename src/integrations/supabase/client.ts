
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://votqhlmjjmqviguycznf.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZvdHFobG1qam1xdmlndXljem5mIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc1MTMzNjksImV4cCI6MjA2MzA4OTM2OX0.ByrnvIS54ORPIgCuRMjGp2n_tbUnPesIUPYmsEN-G9U";

// Initialisation du client avec des options explicites pour garantir un comportement cohérent
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});

// Création du bucket s'il n'existe pas encore (exécuté une seule fois)
const initStorageBucket = async () => {
  try {
    const { data: buckets } = await supabase.storage.listBuckets();
    
    if (!buckets?.find(bucket => bucket.name === 'avatars')) {
      await supabase.storage.createBucket('avatars', {
        public: true,
        allowedMimeTypes: ['image/png', 'image/jpeg', 'image/gif'],
        fileSizeLimit: 2097152, // 2MB in bytes
      });
      console.log('Bucket "avatars" created successfully');
    }
  } catch (error) {
    console.error('Error initializing storage bucket:', error);
  }
};

// Exécuter au chargement
initStorageBucket();
